consts(item) {
    $FD fe_CharacterChestItem
}

text(bank 1 message $83) {
Found [name $e0] in a chest!
}

// three  bytes per treasure. First byte = WorldID, Next byte = MapID, last byte = treasure Index.  
// 3 bytes * 16 possible characters in treasure total = 48 bytes total
// The byte the treasure is in also corresponds to the reward slot in the lookup for character treasure rewards slot
patch($21fa50 bus) {
// %character treasure rewards%    
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
// %end%
}

// One byte per character slot
patch($21fa90 bus)
{
// %character treasure slots%
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
// %end%
}

msfpatch {
    .def  CharacterTreasureRewardLoc__IDs       $21fa50
    .def  CharacterTreasureRewardSlot__IDs       $21fa90
    // 8 checks per world total (2 bytes per check)
    .def  CharacterTreasure__MaxCount              0x10
    .def  CharacterTreasure__TreasureIndex      $7e158f
    .def  CharacterTreasure__RewardSlotIndex      $7e1590
}
msfpatch {
    TreasureCharacter_CheckIfChar:
        lda $08FC
        sec
        sbc $0fe7   // subtract mapinfo's treasure offset
        sta $_CharacterTreasure__TreasureIndex
        clc
        ldx #$0000
        ldy #$0000 // current slot index
    %CheckLoopCharacterChest:
        lda $=CharacterTreasureRewardLoc__IDs,x                
        cmp $1701
        beq $+WorldMatched
        inx
        inx
        inx
        bra $+NextCharacterChest
    %WorldMatched:
        inx
        lda $=CharacterTreasureRewardLoc__IDs,x
        cmp $1702
        beq $+MapIdMatch
        inx
        inx
        bra $+NextCharacterChest
    %MapIdMatch:      
        inx
        lda $=CharacterTreasureRewardLoc__IDs,x
        cmp $_CharacterTreasure__TreasureIndex
        bne $+NextCharacterChest
        bra $+DoCharacterReward
    %NextCharacterChest:
        iny
        cpx #$_CharacterTreasure__MaxCount
        bcc $-CheckLoopCharacterChest
        bra $+FinishCharacterReward
    %DoCharacterReward:
        lda $08fc   // get absolute treasure number
        lda #$83    // message is incremented by 1
        sta $b2
        tyx
        lda $=CharacterTreasureRewardSlot__IDs,x
        sta $_CharacterTreasure__RewardSlotIndex

        // jsl $=Objectives__StageProgress        

        lda $_CharacterTreasure__RewardSlotIndex
        jsl $=Rewards__DeliverFromSlot

        // jsl $=EvEx__ObjectivesImpl_DoEvent  // Handles prepping the event queue
        // lda #$08  // Load the $08 event handler (which tackles objectives)
        // ldx #$df63 
        // jsl $=Bank00LongCallX        
        // ldx $1615   // [hardcoded]
        // stx $09d3   // Restore the other events

        lda $_CharacterTreasure__RewardSlotIndex
        ldx #$0000
        jsl $=Rewards__LoadNameFromSlot
        sec
        rtl
    %FinishCharacterReward:
        clc      
        rtl
}